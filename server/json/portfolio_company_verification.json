{
  "workflow": {
    "name": "Portfolio Company Verification and Form 5500 Matching",
    "description": "Multi-step verification of portfolio companies with Form 5500 matching",
    "tasks": [
      {
        "id": 1,
        "name": "ResearchCompanyBasics",
        "outputKey": "company_basics",
        "inputKeys": ["input"],
        "allowed_tools": ["search_web"],
        "instructions": "CRITICAL: Return ONLY valid JSON with no explanatory text before or after. LIMIT: Maximum 2 search_web calls.\n\nFind comprehensive information about [company name] AS A PORTFOLIO COMPANY OF [pe firm name], including headquarters location, annual revenue, and corporate identity. Focus on the specific entity invested in by [pe firm name], not other companies with similar names.\n\n1) First search: 'Find information about [company name] portfolio company of [pe firm name], including any variations of the company name (like [company name] + Collective/Group/Partners/etc), headquarters location, annual revenue, and DBA relationships.'\n\n2) ONLY if first search doesn't find the PE connection or is missing critical data, try expanded name variations: 'Search for companies with names like \"[company name] Collective\" or \"[company name] Group\" that are portfolio companies of [pe firm name].'\n\nIMPORTANT: Portfolio company names on PE websites are often shortened versions. Look for name expansions, DBA relationships, or subsidiaries. If multiple companies have similar names, focus on the one with a documented connection to [pe firm name].\n\nReturn JSON: {company_name, firm_name, headquarters_location: {city, state, research_confidence}, revenue_research: {annual_revenue_usd, revenue_year, research_confidence, source_info}}. If revenue shows a range, use the middle value. Include no comments in your response.\n\nStart your response with { and end with }."
      },
      {
        "id": 2,
        "name": "VerifyPortfolioStatus", 
        "outputKey": "verified_portfolio_companies",
        "inputKeys": ["company_basics"],
        "allowed_tools": ["search_web"],
        "instructions": "CRITICAL: Return ONLY valid JSON with no explanatory text before or after.\n\nYour task is to check if there is conclusive proof that the company was sold/exited by the firm. Start with the assumption that it was not. Perform a single web search. If you find conclusive evidence that it was sold/exited by the firm, perform a second web search to verify. Only if BOTH searches indicate the company is exited should you indicate as such. Otherwise, assume it is still active. Return JSON: {company_name, firm_name, headquarters_location, revenue_research, portfolio_verification: {exited: bool, verification_confidence, investment_details, status_notes}}. Include no comments in your response.\n\nStart your response with { and end with }."
      },
      {
        "id": 3,
        "name": "ResearchCorporateStructure",
        "outputKey": "legal_entity_research",
        "inputKeys": ["verified_portfolio_companies"],
        "allowed_tools": ["search_web"],
        "instructions": "CRITICAL: Return ONLY valid JSON with no explanatory text before or after. LIMIT: Maximum 3 search_web calls.\n\n1) First search: 'What is the legal entity name and corporate structure of [company name], portfolio company of [pe firm name]?' \n\n2) ONLY if first search mentions subsidiaries, management contracts, or operations, perform second search: 'What businesses or operations does [company name] manage, operate, or provide services for?' \n\n3) ONLY if employment/benefits context found, perform third search for specific entity names discovered.\n\nFocus ONLY on relationships that could involve shared employees or benefits (management contracts, subsidiaries, joint operations). Skip pure investment relationships. Limit related_entities to top 5 most relevant. Return JSON: {company_name, firm_name, headquarters_location, revenue_research, portfolio_verification, legal_entity_research: {legal_entity_name, research_confidence, source_info, related_entities: [max 5], operational_relationships: [max 3]}}. Include no comments in your response.\n\nStart your response with { and end with }."
      },
      {
        "id": 4,
        "name": "TestForm5500Matches",
        "outputKey": "form5500_test_results", 
        "inputKeys": ["legal_entity_research"],
        "allowed_tools": ["search_web", "form5500_batch_name_test"],
        "instructions": "CRITICAL: Return ONLY valid JSON with no explanatory text before or after.\n\nYour goal is to find the exact company in the Form 5500 database that corresponds to this portfolio company. You want a precise match, not similar-sounding companies. Search strategy: 1) Try the legal entity name from the previous task (if available) 2) Try the original company name 3) If no good matches, try variations (remove suffixes like Inc, Corp, LLC). Evaluation criteria (in priority order): - EXACT name match + location match is perfect - EXACT name match (ignore location if name is very specific) - Company name + business suffix with location match (e.g., 'Apple Inc' in Cupertino) - Company name + business suffix (location mismatch acceptable if name is distinctive) - NEVER accept similar-sounding companies (e.g., 'Animax' is not 'Imax'). Location verification: - Use the headquarters city/state from previous research to validate matches - If a company name matches but location is completely different (different state), be skeptical - Common business locations (NYC, Delaware, etc.) are less reliable for verification - If uncertain between multiple matches, prefer the one with matching location. Quality control: - If no clear match exists, it's better to report no match than a wrong match - Document your reasoning in match_type field. Use form5500_batch_name_test for searching. Return the best single match you find. Return JSON: {company_name, firm_name, headquarters_location, revenue_research, portfolio_verification, legal_entity_research, form5500_match: {legal_name, ein, location, match_type, record_count, variation_used}}. Include only the JSON.\n\nStart your response with { and end with }."
      }
    ]
  }
}